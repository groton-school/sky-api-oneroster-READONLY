<?php
/**
 * ORDemographicModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  SKY\OneRoster
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OneRoster
 *
 * OneRoster v1.1 API. For details on the OneRoster Version 1.1 Specification, <a href=\"https://www.imsglobal.org/oneroster-v11-final-specification\">click here</a>. The <a href=\"https://developer.blackbaud.com/skyapi/bbem/oneroster/authorization\">Authorization</a> page provides steps to setup and test these endpoints.
 *
 * The version of the OpenAPI document: v1p1
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace SKY\OneRoster\Model;

use ArrayAccess;
use SKY\OneRoster\ObjectSerializer;

/**
 * ORDemographicModel Class Doc Comment
 *
 * @category Class
 * @package  SKY\OneRoster
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ORDemographicModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ORDemographicModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'birthDate' => 'string',
        'sex' => 'string',
        'americanIndianOrAlaskaNative' => 'bool',
        'asian' => 'bool',
        'blackOrAfricanAmerican' => 'bool',
        'nativeHawaiianOrOtherPacificIslander' => 'bool',
        'white' => 'bool',
        'demographicRaceTwoOrMoreRaces' => 'bool',
        'hispanicOrLatinoEthnicity' => 'bool',
        'countryOfBirthCode' => 'string',
        'stateOfBirthAbbreviation' => 'string',
        'cityOfBirth' => 'string',
        'publicSchoolResidenceStatus' => 'string',
        'sourcedId' => 'string',
        'status' => 'string',
        'dateLastModified' => '\DateTime',
        'metadata' => 'array<string,string>',
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'birthDate' => null,
        'sex' => null,
        'americanIndianOrAlaskaNative' => null,
        'asian' => null,
        'blackOrAfricanAmerican' => null,
        'nativeHawaiianOrOtherPacificIslander' => null,
        'white' => null,
        'demographicRaceTwoOrMoreRaces' => null,
        'hispanicOrLatinoEthnicity' => null,
        'countryOfBirthCode' => null,
        'stateOfBirthAbbreviation' => null,
        'cityOfBirth' => null,
        'publicSchoolResidenceStatus' => null,
        'sourcedId' => null,
        'status' => null,
        'dateLastModified' => 'date-time',
        'metadata' => null,
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'birthDate' => true,
        'sex' => true,
        'americanIndianOrAlaskaNative' => true,
        'asian' => true,
        'blackOrAfricanAmerican' => true,
        'nativeHawaiianOrOtherPacificIslander' => true,
        'white' => true,
        'demographicRaceTwoOrMoreRaces' => true,
        'hispanicOrLatinoEthnicity' => true,
        'countryOfBirthCode' => true,
        'stateOfBirthAbbreviation' => true,
        'cityOfBirth' => true,
        'publicSchoolResidenceStatus' => true,
        'sourcedId' => true,
        'status' => true,
        'dateLastModified' => true,
        'metadata' => true,
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'birthDate' => 'birthDate',
        'sex' => 'sex',
        'americanIndianOrAlaskaNative' => 'americanIndianOrAlaskaNative',
        'asian' => 'asian',
        'blackOrAfricanAmerican' => 'blackOrAfricanAmerican',
        'nativeHawaiianOrOtherPacificIslander' => 'nativeHawaiianOrOtherPacificIslander',
        'white' => 'white',
        'demographicRaceTwoOrMoreRaces' => 'demographicRaceTwoOrMoreRaces',
        'hispanicOrLatinoEthnicity' => 'hispanicOrLatinoEthnicity',
        'countryOfBirthCode' => 'countryOfBirthCode',
        'stateOfBirthAbbreviation' => 'stateOfBirthAbbreviation',
        'cityOfBirth' => 'cityOfBirth',
        'publicSchoolResidenceStatus' => 'publicSchoolResidenceStatus',
        'sourcedId' => 'sourcedId',
        'status' => 'status',
        'dateLastModified' => 'dateLastModified',
        'metadata' => 'metadata',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'birthDate' => 'setBirthDate',
        'sex' => 'setSex',
        'americanIndianOrAlaskaNative' => 'setAmericanIndianOrAlaskaNative',
        'asian' => 'setAsian',
        'blackOrAfricanAmerican' => 'setBlackOrAfricanAmerican',
        'nativeHawaiianOrOtherPacificIslander' => 'setNativeHawaiianOrOtherPacificIslander',
        'white' => 'setWhite',
        'demographicRaceTwoOrMoreRaces' => 'setDemographicRaceTwoOrMoreRaces',
        'hispanicOrLatinoEthnicity' => 'setHispanicOrLatinoEthnicity',
        'countryOfBirthCode' => 'setCountryOfBirthCode',
        'stateOfBirthAbbreviation' => 'setStateOfBirthAbbreviation',
        'cityOfBirth' => 'setCityOfBirth',
        'publicSchoolResidenceStatus' => 'setPublicSchoolResidenceStatus',
        'sourcedId' => 'setSourcedId',
        'status' => 'setStatus',
        'dateLastModified' => 'setDateLastModified',
        'metadata' => 'setMetadata',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'birthDate' => 'getBirthDate',
        'sex' => 'getSex',
        'americanIndianOrAlaskaNative' => 'getAmericanIndianOrAlaskaNative',
        'asian' => 'getAsian',
        'blackOrAfricanAmerican' => 'getBlackOrAfricanAmerican',
        'nativeHawaiianOrOtherPacificIslander' => 'getNativeHawaiianOrOtherPacificIslander',
        'white' => 'getWhite',
        'demographicRaceTwoOrMoreRaces' => 'getDemographicRaceTwoOrMoreRaces',
        'hispanicOrLatinoEthnicity' => 'getHispanicOrLatinoEthnicity',
        'countryOfBirthCode' => 'getCountryOfBirthCode',
        'stateOfBirthAbbreviation' => 'getStateOfBirthAbbreviation',
        'cityOfBirth' => 'getCityOfBirth',
        'publicSchoolResidenceStatus' => 'getPublicSchoolResidenceStatus',
        'sourcedId' => 'getSourcedId',
        'status' => 'getStatus',
        'dateLastModified' => 'getDateLastModified',
        'metadata' => 'getMetadata',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('birthDate', $data ?? [], null);
        $this->setIfExists('sex', $data ?? [], null);
        $this->setIfExists('americanIndianOrAlaskaNative', $data ?? [], null);
        $this->setIfExists('asian', $data ?? [], null);
        $this->setIfExists('blackOrAfricanAmerican', $data ?? [], null);
        $this->setIfExists('nativeHawaiianOrOtherPacificIslander', $data ?? [], null);
        $this->setIfExists('white', $data ?? [], null);
        $this->setIfExists('demographicRaceTwoOrMoreRaces', $data ?? [], null);
        $this->setIfExists('hispanicOrLatinoEthnicity', $data ?? [], null);
        $this->setIfExists('countryOfBirthCode', $data ?? [], null);
        $this->setIfExists('stateOfBirthAbbreviation', $data ?? [], null);
        $this->setIfExists('cityOfBirth', $data ?? [], null);
        $this->setIfExists('publicSchoolResidenceStatus', $data ?? [], null);
        $this->setIfExists('sourcedId', $data ?? [], null);
        $this->setIfExists('status', $data ?? [], null);
        $this->setIfExists('dateLastModified', $data ?? [], null);
        $this->setIfExists('metadata', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets birthDate
     *
     * @return string|null
     */
    public function getBirthDate()
    {
        return $this->container['birthDate'];
    }

    /**
     * Sets birthDate
     *
     * @param string|null $birthDate birthDate
     *
     * @return self
     */
    public function setBirthDate($birthDate)
    {
        if (is_null($birthDate)) {
            array_push($this->openAPINullablesSetToNull, 'birthDate');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('birthDate', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['birthDate'] = $birthDate;

        return $this;
    }

    /**
     * Gets sex
     *
     * @return string|null
     */
    public function getSex()
    {
        return $this->container['sex'];
    }

    /**
     * Sets sex
     *
     * @param string|null $sex sex
     *
     * @return self
     */
    public function setSex($sex)
    {
        if (is_null($sex)) {
            array_push($this->openAPINullablesSetToNull, 'sex');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sex', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sex'] = $sex;

        return $this;
    }

    /**
     * Gets americanIndianOrAlaskaNative
     *
     * @return bool|null
     */
    public function getAmericanIndianOrAlaskaNative()
    {
        return $this->container['americanIndianOrAlaskaNative'];
    }

    /**
     * Sets americanIndianOrAlaskaNative
     *
     * @param bool|null $americanIndianOrAlaskaNative americanIndianOrAlaskaNative
     *
     * @return self
     */
    public function setAmericanIndianOrAlaskaNative($americanIndianOrAlaskaNative)
    {
        if (is_null($americanIndianOrAlaskaNative)) {
            array_push($this->openAPINullablesSetToNull, 'americanIndianOrAlaskaNative');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('americanIndianOrAlaskaNative', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['americanIndianOrAlaskaNative'] = $americanIndianOrAlaskaNative;

        return $this;
    }

    /**
     * Gets asian
     *
     * @return bool|null
     */
    public function getAsian()
    {
        return $this->container['asian'];
    }

    /**
     * Sets asian
     *
     * @param bool|null $asian asian
     *
     * @return self
     */
    public function setAsian($asian)
    {
        if (is_null($asian)) {
            array_push($this->openAPINullablesSetToNull, 'asian');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('asian', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['asian'] = $asian;

        return $this;
    }

    /**
     * Gets blackOrAfricanAmerican
     *
     * @return bool|null
     */
    public function getBlackOrAfricanAmerican()
    {
        return $this->container['blackOrAfricanAmerican'];
    }

    /**
     * Sets blackOrAfricanAmerican
     *
     * @param bool|null $blackOrAfricanAmerican blackOrAfricanAmerican
     *
     * @return self
     */
    public function setBlackOrAfricanAmerican($blackOrAfricanAmerican)
    {
        if (is_null($blackOrAfricanAmerican)) {
            array_push($this->openAPINullablesSetToNull, 'blackOrAfricanAmerican');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('blackOrAfricanAmerican', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['blackOrAfricanAmerican'] = $blackOrAfricanAmerican;

        return $this;
    }

    /**
     * Gets nativeHawaiianOrOtherPacificIslander
     *
     * @return bool|null
     */
    public function getNativeHawaiianOrOtherPacificIslander()
    {
        return $this->container['nativeHawaiianOrOtherPacificIslander'];
    }

    /**
     * Sets nativeHawaiianOrOtherPacificIslander
     *
     * @param bool|null $nativeHawaiianOrOtherPacificIslander nativeHawaiianOrOtherPacificIslander
     *
     * @return self
     */
    public function setNativeHawaiianOrOtherPacificIslander($nativeHawaiianOrOtherPacificIslander)
    {
        if (is_null($nativeHawaiianOrOtherPacificIslander)) {
            array_push($this->openAPINullablesSetToNull, 'nativeHawaiianOrOtherPacificIslander');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('nativeHawaiianOrOtherPacificIslander', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['nativeHawaiianOrOtherPacificIslander'] = $nativeHawaiianOrOtherPacificIslander;

        return $this;
    }

    /**
     * Gets white
     *
     * @return bool|null
     */
    public function getWhite()
    {
        return $this->container['white'];
    }

    /**
     * Sets white
     *
     * @param bool|null $white white
     *
     * @return self
     */
    public function setWhite($white)
    {
        if (is_null($white)) {
            array_push($this->openAPINullablesSetToNull, 'white');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('white', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['white'] = $white;

        return $this;
    }

    /**
     * Gets demographicRaceTwoOrMoreRaces
     *
     * @return bool|null
     */
    public function getDemographicRaceTwoOrMoreRaces()
    {
        return $this->container['demographicRaceTwoOrMoreRaces'];
    }

    /**
     * Sets demographicRaceTwoOrMoreRaces
     *
     * @param bool|null $demographicRaceTwoOrMoreRaces demographicRaceTwoOrMoreRaces
     *
     * @return self
     */
    public function setDemographicRaceTwoOrMoreRaces($demographicRaceTwoOrMoreRaces)
    {
        if (is_null($demographicRaceTwoOrMoreRaces)) {
            array_push($this->openAPINullablesSetToNull, 'demographicRaceTwoOrMoreRaces');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('demographicRaceTwoOrMoreRaces', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['demographicRaceTwoOrMoreRaces'] = $demographicRaceTwoOrMoreRaces;

        return $this;
    }

    /**
     * Gets hispanicOrLatinoEthnicity
     *
     * @return bool|null
     */
    public function getHispanicOrLatinoEthnicity()
    {
        return $this->container['hispanicOrLatinoEthnicity'];
    }

    /**
     * Sets hispanicOrLatinoEthnicity
     *
     * @param bool|null $hispanicOrLatinoEthnicity hispanicOrLatinoEthnicity
     *
     * @return self
     */
    public function setHispanicOrLatinoEthnicity($hispanicOrLatinoEthnicity)
    {
        if (is_null($hispanicOrLatinoEthnicity)) {
            array_push($this->openAPINullablesSetToNull, 'hispanicOrLatinoEthnicity');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('hispanicOrLatinoEthnicity', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['hispanicOrLatinoEthnicity'] = $hispanicOrLatinoEthnicity;

        return $this;
    }

    /**
     * Gets countryOfBirthCode
     *
     * @return string|null
     */
    public function getCountryOfBirthCode()
    {
        return $this->container['countryOfBirthCode'];
    }

    /**
     * Sets countryOfBirthCode
     *
     * @param string|null $countryOfBirthCode countryOfBirthCode
     *
     * @return self
     */
    public function setCountryOfBirthCode($countryOfBirthCode)
    {
        if (is_null($countryOfBirthCode)) {
            array_push($this->openAPINullablesSetToNull, 'countryOfBirthCode');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('countryOfBirthCode', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['countryOfBirthCode'] = $countryOfBirthCode;

        return $this;
    }

    /**
     * Gets stateOfBirthAbbreviation
     *
     * @return string|null
     */
    public function getStateOfBirthAbbreviation()
    {
        return $this->container['stateOfBirthAbbreviation'];
    }

    /**
     * Sets stateOfBirthAbbreviation
     *
     * @param string|null $stateOfBirthAbbreviation stateOfBirthAbbreviation
     *
     * @return self
     */
    public function setStateOfBirthAbbreviation($stateOfBirthAbbreviation)
    {
        if (is_null($stateOfBirthAbbreviation)) {
            array_push($this->openAPINullablesSetToNull, 'stateOfBirthAbbreviation');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('stateOfBirthAbbreviation', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['stateOfBirthAbbreviation'] = $stateOfBirthAbbreviation;

        return $this;
    }

    /**
     * Gets cityOfBirth
     *
     * @return string|null
     */
    public function getCityOfBirth()
    {
        return $this->container['cityOfBirth'];
    }

    /**
     * Sets cityOfBirth
     *
     * @param string|null $cityOfBirth cityOfBirth
     *
     * @return self
     */
    public function setCityOfBirth($cityOfBirth)
    {
        if (is_null($cityOfBirth)) {
            array_push($this->openAPINullablesSetToNull, 'cityOfBirth');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('cityOfBirth', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['cityOfBirth'] = $cityOfBirth;

        return $this;
    }

    /**
     * Gets publicSchoolResidenceStatus
     *
     * @return string|null
     */
    public function getPublicSchoolResidenceStatus()
    {
        return $this->container['publicSchoolResidenceStatus'];
    }

    /**
     * Sets publicSchoolResidenceStatus
     *
     * @param string|null $publicSchoolResidenceStatus publicSchoolResidenceStatus
     *
     * @return self
     */
    public function setPublicSchoolResidenceStatus($publicSchoolResidenceStatus)
    {
        if (is_null($publicSchoolResidenceStatus)) {
            array_push($this->openAPINullablesSetToNull, 'publicSchoolResidenceStatus');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('publicSchoolResidenceStatus', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['publicSchoolResidenceStatus'] = $publicSchoolResidenceStatus;

        return $this;
    }

    /**
     * Gets sourcedId
     *
     * @return string|null
     */
    public function getSourcedId()
    {
        return $this->container['sourcedId'];
    }

    /**
     * Sets sourcedId
     *
     * @param string|null $sourcedId sourcedId
     *
     * @return self
     */
    public function setSourcedId($sourcedId)
    {
        if (is_null($sourcedId)) {
            array_push($this->openAPINullablesSetToNull, 'sourcedId');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sourcedId', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sourcedId'] = $sourcedId;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        if (is_null($status)) {
            array_push($this->openAPINullablesSetToNull, 'status');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('status', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets dateLastModified
     *
     * @return \DateTime|null
     */
    public function getDateLastModified()
    {
        return $this->container['dateLastModified'];
    }

    /**
     * Sets dateLastModified
     *
     * @param \DateTime|null $dateLastModified dateLastModified
     *
     * @return self
     */
    public function setDateLastModified($dateLastModified)
    {
        if (is_null($dateLastModified)) {
            array_push($this->openAPINullablesSetToNull, 'dateLastModified');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('dateLastModified', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['dateLastModified'] = $dateLastModified;

        return $this;
    }

    /**
     * Gets metadata
     *
     * @return array<string,string>|null
     */
    public function getMetadata()
    {
        return $this->container['metadata'];
    }

    /**
     * Sets metadata
     *
     * @param array<string,string>|null $metadata metadata
     *
     * @return self
     */
    public function setMetadata($metadata)
    {
        if (is_null($metadata)) {
            array_push($this->openAPINullablesSetToNull, 'metadata');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('metadata', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['metadata'] = $metadata;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
        return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
